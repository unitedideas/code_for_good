# Generated by Django 2.0.7 on 2018-07-28 18:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import partner.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2048)),
                ('distributor_type', models.CharField(choices=[('AG', 'Agency'), ('HO', 'Hospital')], max_length=2)),
                ('agency_types', models.CharField(choices=[('50', '501(c)3'), ('RE', 'Religious Organization'), ('GO', 'Government Organization')], max_length=2)),
                ('proof_of_agency_status', models.FileField(upload_to='')),
                ('proof_of_agency_status_type', models.CharField(choices=[('50', '501(c)3 LETTER'), ('GS', 'Letter of Good Standing from Denominational Headquarters'), ('GL', 'Government Letterhead')], max_length=2)),
                ('agency_mission', models.CharField(max_length=4096)),
                ('address_1', models.CharField(max_length=1024)),
                ('address_2', models.CharField(max_length=1024)),
                ('city', models.CharField(max_length=1024)),
                ('state', models.CharField(choices=[('Alabama', 'AL'), ('Alaska', 'AK'), ('Arizona', 'AZ'), ('Arkansas', 'AR'), ('California', 'CA'), ('Colorado', 'CO'), ('Connecticut', 'CT'), ('Delaware', 'DE'), ('Florida', 'FL'), ('Georgia', 'GA'), ('Hawaii', 'HI'), ('Idaho', 'ID'), ('Illinois', 'IL'), ('Indiana', 'IN'), ('Iowa', 'IA'), ('Kansas', 'KS'), ('Kentucky', 'KY'), ('Louisiana', 'LA'), ('Maine', 'ME'), ('Maryland', 'MD'), ('Massachusetts', 'MA'), ('Michigan', 'MI'), ('Minnesota', 'MN'), ('Mississippi', 'MS'), ('Missouri', 'MO'), ('Montana', 'MT'), ('Nebraska', 'NE'), ('Nevada', 'NV'), ('New Hampshire', 'NH'), ('New Jersey', 'NJ'), ('New Mexico', 'NM'), ('New York', 'NY'), ('North Carolina', 'NC'), ('North Dakota', 'ND'), ('Ohio', 'OH'), ('Oklahoma', 'OK'), ('Oregon', 'OR'), ('Pennsylvania', 'PA'), ('Rhode Island', 'RI'), ('South Carolina', 'SC'), ('South Dakota', 'SD'), ('Tennessee', 'TN'), ('Texas', 'TX'), ('Utah', 'UT'), ('Vermont', 'VT'), ('Virginia', 'VA'), ('Washington', 'WA'), ('West Virginia', 'WV'), ('Wisconsin', 'WI'), ('Wyoming', 'WY')], max_length=2)),
                ('zip_code', models.CharField(max_length=100)),
                ('website', models.URLField()),
                ('facebook', models.CharField(help_text='Facebook page name (DO NOT include the URL)', max_length=1024)),
                ('twitter', models.CharField(help_text='Twitter Handle', max_length=1024)),
                ('founded', partner.fields.RangeIntegerField(validators=[django.core.validators.MinValueValidator(1800), django.core.validators.MaxValueValidator(2017)])),
                ('form_990', models.FileField(upload_to='')),
                ('program_name', models.CharField(max_length=1024)),
                ('program_description', models.CharField(max_length=4096)),
                ('case_management', models.BooleanField()),
                ('evidence_based', models.BooleanField()),
                ('evidence_based_description', models.CharField(max_length=4096)),
                ('program_client_improvement', models.CharField(max_length=4096)),
                ('diaper_use', models.CharField(choices=[('EM', 'Emergency supplies for families (off site)'), ('HO', 'Homeless shelter'), ('DO', 'Domestic violence shelter'), ('ON', 'On-site residential program'), ('OU', 'Outreach'), ('AL', 'Alcohol/Drug Recovery'), ('DA', 'Daycare'), ('FO', 'Foster Care'), ('OT', 'Other')], max_length=2)),
                ('other_diaper_use', models.CharField(max_length=4096)),
                ('currently_provide_diapers', models.BooleanField()),
                ('turn_away_child_care', models.BooleanField()),
                ('program_address1', models.CharField(max_length=1024)),
                ('program_address2', models.CharField(max_length=1024)),
                ('program_city', models.CharField(max_length=1024)),
                ('program_state', models.CharField(choices=[('Alabama', 'AL'), ('Alaska', 'AK'), ('Arizona', 'AZ'), ('Arkansas', 'AR'), ('California', 'CA'), ('Colorado', 'CO'), ('Connecticut', 'CT'), ('Delaware', 'DE'), ('Florida', 'FL'), ('Georgia', 'GA'), ('Hawaii', 'HI'), ('Idaho', 'ID'), ('Illinois', 'IL'), ('Indiana', 'IN'), ('Iowa', 'IA'), ('Kansas', 'KS'), ('Kentucky', 'KY'), ('Louisiana', 'LA'), ('Maine', 'ME'), ('Maryland', 'MD'), ('Massachusetts', 'MA'), ('Michigan', 'MI'), ('Minnesota', 'MN'), ('Mississippi', 'MS'), ('Missouri', 'MO'), ('Montana', 'MT'), ('Nebraska', 'NE'), ('Nevada', 'NV'), ('New Hampshire', 'NH'), ('New Jersey', 'NJ'), ('New Mexico', 'NM'), ('New York', 'NY'), ('North Carolina', 'NC'), ('North Dakota', 'ND'), ('Ohio', 'OH'), ('Oklahoma', 'OK'), ('Oregon', 'OR'), ('Pennsylvania', 'PA'), ('Rhode Island', 'RI'), ('South Carolina', 'SC'), ('South Dakota', 'SD'), ('Tennessee', 'TN'), ('Texas', 'TX'), ('Utah', 'UT'), ('Vermont', 'VT'), ('Virginia', 'VA'), ('Washington', 'WA'), ('West Virginia', 'WV'), ('Wisconsin', 'WI'), ('Wyoming', 'WY')], max_length=2)),
                ('program_zip_code', models.CharField(max_length=100)),
                ('max_serve', models.IntegerField(help_text='Maximum number of people this organization can serve')),
                ('incorporate_plan', models.CharField(max_length=4096)),
                ('responsible_staff_position', models.BooleanField()),
                ('storage_space', models.BooleanField()),
                ('description_of_storage_space', models.CharField(max_length=4096)),
                ('trusted_pickup', models.BooleanField()),
                ('incmome_requirement_description', models.BooleanField()),
                ('serve_income_circumstances', models.BooleanField()),
                ('income_verification', models.BooleanField()),
                ('internal_diaper_bank', models.BooleanField()),
                ('maac', models.BooleanField()),
                ('population_black', partner.fields.PercentageField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('population_white', partner.fields.PercentageField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('population_hispanic', partner.fields.PercentageField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('population_asian', partner.fields.PercentageField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('population_american_indian', partner.fields.PercentageField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('population_island', partner.fields.PercentageField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('population_multi_racial', partner.fields.PercentageField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('population_other', partner.fields.PercentageField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('zip_codes_served', models.CharField(max_length=1024)),
                ('at_fpl_or_below', partner.fields.PercentageField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('above_1_2_times_fpl', partner.fields.PercentageField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('greater_2_times_fpl', partner.fields.PercentageField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('poverty_unknown', partner.fields.PercentageField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ages_served', models.CharField(max_length=1024)),
                ('executive_director_name', models.CharField(max_length=1024)),
                ('executive_director_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128)),
                ('executive_director_email', models.EmailField(max_length=254)),
                ('program_contact_name', models.CharField(max_length=1024)),
                ('program_contact_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128)),
                ('program_contact_mobile', phonenumber_field.modelfields.PhoneNumberField(max_length=128)),
                ('program_contact_email', models.EmailField(max_length=254)),
                ('pick_up_method', models.CharField(choices=[('VO', 'Volunteers'), ('ST', 'Staff'), ('CO', 'Courier')], max_length=2)),
                ('pick_up_contact_name', models.CharField(max_length=1024)),
                ('pick_up_contact_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128)),
                ('pick_up_contact_email', models.EmailField(max_length=254)),
                ('distribution_times', models.CharField(max_length=1024)),
                ('new_client_times', models.CharField(max_length=1024)),
                ('more_docs_required', models.CharField(max_length=1024)),
                ('funding_sources', models.CharField(choices=[('FO', 'Grants - Foundation'), ('ST', 'Grants - State'), ('FE', 'Grants - Federal'), ('CO', 'Corporate Donations'), ('IN', 'Individual Donations'), ('OT', 'Other')], max_length=2)),
                ('sources_of_diapers', models.CharField(choices=[('PR', 'Purchase Retail'), ('PH', 'Purchase Wholesale'), ('DD', 'Diaper Drives'), ('DO', 'Diaper Drives conducted by others'), ('O', 'Other')], max_length=2)),
                ('diaper_budget', models.BooleanField()),
                ('diaper_funding_source', models.BooleanField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
